{"version":3,"sources":["components/StopwatchDisplay/StopwatchDisplay.module.css","components/StopwatchDisplay/StopwatchDisplay.js","components/Stopwatch/Stopwatch.js","index.js","components/Stopwatch/Stopwatch.module.css"],"names":["module","exports","StopwatchDisplay","this","props","formatTime","currentTimeSec","currentTimeMin","currentTimeHours","className","styles","Conteiner","Component","Stopwatch","state","running","val","value","toString","length","start","setState","watch","setInterval","pace","stop","clearInterval","wait","reset","useRef","Btn","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,UAAY,sC,sICiBfC,E,4JAdb,WACE,MACEC,KAAKC,MADCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,eAAgBC,EAApC,EAAoCA,eAAgBC,EAApD,EAAoDA,iBAEpD,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACE,iCACGN,EAAWG,GADd,IACkCH,EAAWE,GAD7C,IAEGF,EAAWC,Y,GARSM,a,gBC2FhBC,E,4MAxFbC,MAAQ,CACNC,SAAS,EACTT,eAAgB,EAChBC,eAAgB,EAChBC,iBAAkB,G,EAGpBH,WAAa,SAACW,GACZ,IAAIC,EAAQD,EAAIE,WAIhB,OAHID,EAAME,OAAS,IACjBF,EAAQ,IAAMA,GAETA,G,EAGTG,MAAQ,WACD,EAAKN,MAAMC,UACd,EAAKM,SAAS,CAAEN,SAAS,IACzB,EAAKO,MAAQC,aAAY,kBAAM,EAAKC,SAAQ,O,EAIhDC,KAAO,WACL,EAAKJ,SAAS,CACZN,SAAS,EACTT,eAAgB,EAChBC,eAAgB,EAChBC,iBAAkB,IAEpBkB,cAAc,EAAKJ,Q,EAGrBK,KAAO,WACL,EAAKN,SAAS,CAAEN,SAAS,IACzBW,cAAc,EAAKJ,Q,EAGrBE,KAAO,WACL,EAAKH,SAAS,CAAEf,eAAgB,EAAKQ,MAAMR,eAAiB,IACxD,EAAKQ,MAAMR,gBAAkB,KAC/B,EAAKe,SAAS,CAAEd,eAAgB,EAAKO,MAAMP,eAAiB,IAC5D,EAAKc,SAAS,CAAEf,eAAgB,KAG9B,EAAKQ,MAAMP,gBAAkB,KAC/B,EAAKc,SAAS,CAAEb,iBAAkB,EAAKM,MAAMN,iBAAmB,IAChE,EAAKa,SAAS,CAAEd,eAAgB,M,EAIpCqB,MAAQ,WACN,EAAKP,SAAS,CACZf,eAAgB,EAChBC,eAAgB,EAChBC,iBAAkB,K,4CAItB,WACE,OACE,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,2CACA,cAAC,EAAD,yBACEkB,OAAO,WACH1B,KAAKW,OAFX,IAGET,WAAYF,KAAKE,eAEK,IAAvBF,KAAKW,MAAMC,SACV,wBAAQN,UAAWC,IAAOoB,IAAKC,QAAS5B,KAAKiB,MAA7C,oBAIsB,IAAvBjB,KAAKW,MAAMC,SACV,wBAAQN,UAAWC,IAAOoB,IAAKC,QAAS5B,KAAKsB,KAA7C,kBAIF,wBAAQhB,UAAWC,IAAOoB,IAAKC,QAAS5B,KAAKwB,KAA7C,kBAGA,wBAAQlB,UAAWC,IAAOoB,IAAKC,QAAS5B,KAAKyB,MAA7C,0B,GAjFgBhB,aCCxBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,U,kBCV1BpC,EAAOC,QAAU,CAAC,UAAY,6BAA6B,IAAM,uBAAuB,MAAQ,4B","file":"static/js/main.1a5b18fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Conteiner\":\"StopwatchDisplay_Conteiner__2RuBW\"};","import { Component } from \"react\";\r\nimport styles from \"../StopwatchDisplay/StopwatchDisplay.module.css\";\r\n\r\nclass StopwatchDisplay extends Component {\r\n  render() {\r\n    const { formatTime, currentTimeSec, currentTimeMin, currentTimeHours } =\r\n      this.props;\r\n    return (\r\n      <div className={styles.Conteiner}>\r\n        <span>\r\n          {formatTime(currentTimeHours)}:{formatTime(currentTimeMin)}:\r\n          {formatTime(currentTimeSec)}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StopwatchDisplay;\r\n","import React, { Component } from \"react\";\r\nimport StopwatchDisplay from \"../StopwatchDisplay/StopwatchDisplay\";\r\nimport styles from \"../Stopwatch/Stopwatch.module.css\";\r\n// import { Observable } from \"rxjs\";\r\n\r\nclass Stopwatch extends Component {\r\n  state = {\r\n    running: false,\r\n    currentTimeSec: 0,\r\n    currentTimeMin: 0,\r\n    currentTimeHours: 0,\r\n  };\r\n\r\n  formatTime = (val) => {\r\n    let value = val.toString();\r\n    if (value.length < 2) {\r\n      value = \"0\" + value;\r\n    }\r\n    return value;\r\n  };\r\n\r\n  start = () => {\r\n    if (!this.state.running) {\r\n      this.setState({ running: true });\r\n      this.watch = setInterval(() => this.pace(), 1000);\r\n    }\r\n  };\r\n\r\n  stop = () => {\r\n    this.setState({\r\n      running: false,\r\n      currentTimeSec: 0,\r\n      currentTimeMin: 0,\r\n      currentTimeHours: 0,\r\n    });\r\n    clearInterval(this.watch);\r\n  };\r\n\r\n  wait = () => {\r\n    this.setState({ running: false });\r\n    clearInterval(this.watch);\r\n  };\r\n\r\n  pace = () => {\r\n    this.setState({ currentTimeSec: this.state.currentTimeSec + 1 });\r\n    if (this.state.currentTimeSec >= 60) {\r\n      this.setState({ currentTimeMin: this.state.currentTimeMin + 1 });\r\n      this.setState({ currentTimeSec: 0 });\r\n    }\r\n\r\n    if (this.state.currentTimeMin >= 60) {\r\n      this.setState({ currentTimeHours: this.state.currentTimeHours + 1 });\r\n      this.setState({ currentTimeMin: 0 });\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      currentTimeSec: 0,\r\n      currentTimeMin: 0,\r\n      currentTimeHours: 0,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.Conteiner}>\r\n        <h1>Stopwatch</h1>\r\n        <StopwatchDisplay\r\n          useRef=\"display\"\r\n          {...this.state}\r\n          formatTime={this.formatTime}\r\n        />\r\n        {this.state.running === false && (\r\n          <button className={styles.Btn} onClick={this.start}>\r\n            START\r\n          </button>\r\n        )}\r\n        {this.state.running === true && (\r\n          <button className={styles.Btn} onClick={this.stop}>\r\n            STOP\r\n          </button>\r\n        )}\r\n        <button className={styles.Btn} onClick={this.wait}>\r\n          WAIT\r\n        </button>\r\n        <button className={styles.Btn} onClick={this.reset}>\r\n          RESET\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stopwatch;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Stopwatch from \"./components/Stopwatch/Stopwatch\";\n// import App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Stopwatch />\n    {/* <App /> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Conteiner\":\"Stopwatch_Conteiner__2xpdN\",\"Btn\":\"Stopwatch_Btn__2fsnV\",\"third\":\"Stopwatch_third__LtVe_\"};"],"sourceRoot":""}